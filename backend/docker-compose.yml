services:

  piatto:
    container_name: piatto
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    
    volumes:
      - ./src:/home/app/web/app
      - ./dev-poet-461212-d9-35a36f7ab681.json:/home/app/web/dev-poet-461212-d9-35a36f7ab681.json:ro
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      - WORKERS=1
      - MINIO_ENDPOINT=minio:9000
      - CHROMA_SERVER_HTTP_HOST=chromadb
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SSL=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-piatto}
      - DB_USER=${POSTGRES_USER:-piatto}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8000:8000" # piatto app -> 80(00)
    env_file:
      - ./.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-piatto}
      POSTGRES_USER: ${POSTGRES_USER:-piatto}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Use a subdirectory for PGDATA so initdb won't conflict with pre-existing files
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_LOG_MIN_MESSAGES: warning
      POSTGRES_LOGGING_COLLECTOR: on
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - backend

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-adminpass}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 40
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    depends_on:
      - postgres
    ports:
      - "8090:80" # pgAdmin web UI -> 80(90)
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

volumes:
  pgdata:
  pgadmin-data:

networks:
  backend:
    driver: bridge
